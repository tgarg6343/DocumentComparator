					Bootstrap 4

Bootstrap is the most popular front end framwork for building responsive, mobile-first sites and applications.Throughout the course you’ll find high quality HTML, CSS, and JavaScript to make  any project easier than ever.


Starting First Project :


To make Responsive Layout
 Meta tag :
<meta name="viewport" content="width=device-width, initial-scale=1>

Files to be included:
To start any project on BS4 we need to include some external files to our project .
There are two ways to do it:
1: Provide the links to online files.
For that purpose we use these four links-

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">

<script src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>

2: Download these Files and link them to our project
For dowloading the files :
Here is the link:
https://v4-alpha.getbootstrap.com/getting-started/download/

Download the file from here, extract it. Link the bootstrap.min.css and bootstrap.min.js to our project.
And for jquery.min.js and popper.js include these two links

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>

Conatiners :

Containers are the most basic layout element in Bootstrap and are required when using our default grid system.

conatainer-fluid  class is used for a full width container, spanning the entire width of the viewport

conatainer class is used as defoult  width container.

Grid System:
Like 960 Grid system bootstrap also provides the easiest way to create the layout of  the webpage. The whole width of the layout is divided into 12 columns. According to our  need we can align the elements into each column. Nesting of rows and columns is very important and widely used feature of the grid system in bootstrap.
We can adjust the columns in the rows according to the screen widths. In other words we can arrange the elements in each break points . 







How it works:

span 1	span 1	span 1	span 1	span 1	span 1	span 1	span 1	span 1	span 1	span 1	span 1
 span 4	 span 4	 span 4
span 4	span 8
span 6	span 6
span 12

Example:  
          1 of 2	            2 of 2

      1 of 4 	    2 of 4        	    3 of 4	 4 of 4

<div class="row">
  <div class="col-sm-6">1 of 2</div>
  <div class="col-sm-6">2 of 2</div>
</div>
<div class="row">
  <div class="col-sm-3">1 of 4</div>
  <div class="col-sm-3">2 of 4</div>
  <div class="col-sm-3">3 of 4</div>
  <div class="col-sm-3">4 of 4</div>
</div>


Grid Classes
The Bootstrap 4 grid system has five classes:
•	.col- (extra small devices - screen width less than 576px)
•	.col-sm- (small devices - screen width equal to or greater than 576px)
•	.col-md- (medium devices - screen width equal to or greater than 768px)
•	.col-lg- (large devices - screen width equal to or greater than 992px)
•	.col-xl- (xlarge devices - screen width equal to or greater than 1200px)
We  can build our web page according to these five classes. We can align the elements for each class.
For exemaple:
<div class=”row”>
<div class=”col-sm-6 col-md-3”></div>
<div class=”col-sm-6 col-md-3”></div>
<div class=”col-sm-6 col-md-3”></div>
<div class=”col-sm-6 col-md-3”></div>
</div>
</div>
In this example  for all devices having screen width medium ,large and extra large will have 4  columns in one row and all devices having screen with small will have two columns in one row. This is how the elements are arranged for different devices .That is how BS4 is used for responsiveness.


Media Query:
For applying styles to the devices of  different screen widths at any screen widths we use  media query. This is also one of the most important features of bootstrap 4.

How It Works:
// Extra small devices (portrait phones, less than 576px)
@media (max-width: 575px) { ... }

// Small devices (landscape phones, 576px and up)
@media (min-width: 576px) and (max-width: 767px) { ... }

// Medium devices (tablets, 768px and up)
@media (min-width: 768px) and (max-width: 991px) { ... }

// Large devices (desktops, 992px and up)
@media (min-width: 992px) and (max-width: 1199px) { ... }

// Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) { ... }

Example:
We put the following statement in our css file and apply the style inside the  {}.
@media (min-width: 992px) and (max-width: 1199px) {
.box1{
Background-color:blue;
Border:1px solid black;

 }
 }
We can change the min-width and max-width as required. 







Components 
Jumbotron:
A very give a beautiful background to showcase some special content in the page we use jumbotron  .It is a very  lightweight, flexible component that can optionally extend the entire viewport to showcase key marketing messages on our page.
Ex:
<div class="jumbotron">
  <h1 class="display-4">Hello, world!</h1>
  <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>
  <hr class="my-4">
  <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>
  <p class="lead">
    <a class="btn btn-primary btn-lg" href="#" role="button">Learn more</a>
  </p>
</div>


 





Navbar:
Navigation bar is used for  branding, navigation, search and more.It is generally kept at the top of the page.It can be fixed at the the top of the page or moved with the page .
How it works
Here’s what you need to know before getting started with the navbar:
•	Navbars require a wrapping .navbar with .navbar-expand{-sm|-md|-lg|-xl} for responsive collapsing and color scheme classes.
•	Navbars and their contents are fluid by default. Use optional containers to limit their horizontal width.
•	Use our spacing and flex utility classes for controlling spacing and alignment within navbars.
•	Navbars are responsive by default, but you can easily modify them to change that. Responsive behavior depends on our Collapse JavaScript plugin.
•	Navbars are hidden by default when printing. Force them to be printed by adding .d-print to the .navbar. See the display utility class.
•	Ensure accessibility by using a <nav> element or, if using a more generic element such as a <div>, add a role="navigation" to every navbar to explicitly identify it as a landmark region for users of assistive technologies.

Ex:


 

<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <a class="navbar-brand" href="#">Navbar</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Link</a>
      </li>
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Dropdown
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <a class="dropdown-item" href="#">Action</a>
          <a class="dropdown-item" href="#">Another action</a>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="#">Something else here</a>
        </div>
      </li>
      <li class="nav-item">
        <a class="nav-link disabled" href="#">Disabled</a>
      </li>
    </ul>
    <form class="form-inline my-2 my-lg-0">
      <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
      <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
  </div>
</nav>



Cards:
The acrd includes options for headers and footers, a wide variety of content, contextual background colors, and powerful display options.

Ex:
 

<div class="card" style="width: 18rem;">
  <img class="card-img-top" src="..." alt="Card image cap">
  <div class="card-body">
    <h5 class="card-title">Card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>


Carousel:
This is a component which works as slideshow for cycling through elements—images or slides of text—like a carousel.


How it works
The carousel is a slideshow for cycling through a series of content, built with CSS 3D transforms and a bit of JavaScript. It works with a series of images, text, or custom markup. It also includes support for previous/next controls and indicators.
Ex:
 

<div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
  <div class="carousel-inner">
    <div class="carousel-item active">
      <img class="d-block w-100" src="..." alt="First slide">
    </div>
    <div class="carousel-item">
      <img class="d-block w-100" src="..." alt="Second slide">
    </div>
    <div class="carousel-item">
      <img class="d-block w-100" src="..." alt="Third slide">
    </div>
  </div>
  <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>

